name: Deploy to Vercel

env:
    VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}  # Store your Vercel token in GitHub Secrets
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}  # Optional: store your project ID in Secrets
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}  # Optional: store your organization ID in Secrets

on:
  push:
    branches:
      - master  # or 'master', depending on your default branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.20.0'  # Choose your React app's Node.js version

    - name: Set CI environment variable to false
      run: echo "CI=false" >> $GITHUB_ENV  # This disables treating warnings as errors

    - name: Install dependencies
      run: npm install  # or 'yarn install' if you use yarn
    
    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    - name: Build the app
      run: npm run build  # or 'yarn build'

    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
    - name: Build Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

    # - name: Deploy to Vercel
    #   env:
    #     VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}  # Store your Vercel token in GitHub Secrets
    #     VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}  # Optional: store your project ID in Secrets
    #     VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}  # Optional: store your organization ID in Secrets
    #   run: |
    #     curl -sL https://github.com/vercel/vercel-action/releases/latest/download/install.sh | bash
    #     vercel --token $VERCEL_TOKEN --prod --confirm